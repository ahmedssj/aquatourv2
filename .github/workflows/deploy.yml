name: AquaTour CRM - CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test Flutter App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

      - name: Run tests
        run: flutter test

  build:
    name: Build for Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'

      - name: Create production .env
        run: |
          echo "API_BASE_URL=https://aquatour-crm-api.vercel.app/api" > .env
          echo "APP_ENV=production" >> .env
          echo "DEBUG=false" >> .env
          echo "ALLOWED_ROLES=superadministrador,administrador,asesor" >> .env

      - name: Install dependencies
        run: flutter pub get

      - name: Build web for production
        run: flutter build web --release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: build/web/

  test-backend:
    name: Test Backend API
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Run backend tests (if any)
        run: |
          cd backend
          npm run test || echo "No tests configured"

      - name: Check backend syntax
        run: |
          cd backend
          node -c server.js
